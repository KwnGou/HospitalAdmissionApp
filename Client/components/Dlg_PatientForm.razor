@page "/patientForm"
@using HospitalAdmissionApp.Shared.DTOs
@inject HttpClient Http
@inject DialogService DialogSvc
@inject NotificationService NotificationSvc
@inject NavigationManager NavMan

@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else
{
    <div Class="rz-p-0 rz-p-md-12">
        <RadzenTemplateForm TItem="Patient_EditDTO" Data="@DTO">
            <RadzenColumn Size="12" SizeSM="6">
                <RadzenStack>
                    <RadzenFormField Text="Name">
                        <RadzenTextBox @bind-Value="DTO.Name" Name="Patient Name" />
                        @DTO.Name
                    </RadzenFormField>
                    <RadzenFormField Text="Surname">
                        <RadzenTextBox @bind-Value="DTO.Surname" Name="Patient Surname" />
                        @DTO.Surname
                    </RadzenFormField>
                    <RadzenFormField Text="Date of birth">
                        <RadzenNumeric @bind-Value="DTO.DateOfBirth" Name="Patient date of birth" />
                        @DTO.DateOfBirth
                    </RadzenFormField>
                    <RadzenFormField Text="Age">
                        <RadzenNumeric @bind-Value="DTO.Age" Name="Patient Age" />
                        @DTO.Age
                    </RadzenFormField>
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeSM="6">
                <RadzenDropDown TValue="int?" Data="@diseases" @ref="diseasesGrid" @bind-SelectedItem="@selectedDisease" @bind-Value="@selectedDiseaseId"
                                ValueProperty="@(nameof(Disease_GridDTO.Id))"
                                Style="width: 100%; max-width: 400px;" Name="DropDownBindValue" />
                                @DTO.DiseaseName
                <RadzenFormField Text="Sex">
                    <RadzenRadioButtonList @bind-Value=@DTO.Sex TValue="string" class="rz-m-4 rz-mt-8">
                        <Items>
                            <RadzenRadioButtonListItem Text="Male" Value="1" />
                            <RadzenRadioButtonListItem Text="Female" Value="2" />
                            <RadzenRadioButtonListItem Text="Other" Value="3" />
                            @DTO.Sex
                        </Items>
                    </RadzenRadioButtonList>
                </RadzenFormField>
                <RadzenFormField Text="Insurance">
                    <RadzenRadioButtonList @bind-Value=@DTO.Insurance TValue="int" class="rz-m-4 rz-mt-8">
                        <Items>
                            <RadzenRadioButtonListItem Text="1" Value="1" />
                            <RadzenRadioButtonListItem Text="2" Value="2" />
                            <RadzenRadioButtonListItem Text="2" Value="2" />
                            @DTO.Insurance
                        </Items>
                    </RadzenRadioButtonList>
                </RadzenFormField>
                <RadzenFormField Text="Patient Details">
                    <RadzenTextArea @bind-Value="@DTO.PatientDetails" Name="Patient Details" />
                    @DTO.PatientDetails
                </RadzenFormField>
            </RadzenColumn>
        </RadzenTemplateForm>
    </div>
}
@code {
    private bool isLoading;

    [Parameter]
    public Patient_EditDTO DTO { get; set; }

    private Patient_DetailsDTO[] patients;

    private RadzenDropDown<int?> diseasesGrid;
    private int? selectedDiseaseId;
    private Disease_GridDTO[] diseases;
    private object selectedDisease;

    [Parameter]
    public bool IsNew { get; set; }

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        patients = await Http.GetFromJsonAsync<Patient_DetailsDTO[]>("api/patients");
        diseases = await Http.GetFromJsonAsync<Disease_GridDTO[]>("api/diseas");
        isLoading = false;
        StateHasChanged();

    }

    private async Task Save(Patient_DetailsDTO dto)
    {
        HttpResponseMessage res;
        if (IsNew)
        {
            res = await Http.PostAsJsonAsync<Patient_DetailsDTO>("api/patients", dto);
        }
        else
        {
            res = await Http.PutAsJsonAsync<Patient_DetailsDTO>($"api/plates/{dto.Id}", dto);
        }

        if (!res.IsSuccessStatusCode)
        {
            var errMsg = await res.Content.ReadAsStringAsync();
            NotificationSvc.Notify(
                NotificationSeverity.Error,
                "Saving failed",
                errMsg,
                8000);
            Console.WriteLine($"Save error: {errMsg}");
        }
        else
        {
            DialogSvc.Close(true);
            if (IsNew)
            {
                var newPatient = await res.Content.ReadFromJsonAsync<Patient_DetailsDTO>();
                NavMan.NavigateTo($"patients/{newPatient.Id}");
            }

        }
    }

    private async Task DeletePatient(Patient_DetailsDTO patDto)
    {
        
    }
}
