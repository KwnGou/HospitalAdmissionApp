@page "/clinics"
@using HospitalAdmissionApp.Shared.DTOs
@inject HttpClient Http
@inject NotificationService NotificationSvc


<PageTitle>Clinics</PageTitle>

<h1> Clinics</h1>

@if (clinics == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenDataGrid @ref="@grid" AllowFiltering="@true" AllowSorting="@true" AllowColumnResize="@true" PageSize="10" AllowPaging="@true" ColumnWidth="100px"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Simple" PagerHorizontalAlign="HorizontalAlign.Center"
                     Data="@clinics" TItem="Clinic_GridDTO" >
        <Columns>
            <RadzenDataGridColumn TItem="Clinic_GridDTO" Title="Clinic name" TextAlign="TextAlign.Left" Filterable="@true" Property="@(nameof(Clinic_GridDTO.Name))">
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Clinic_GridDTO" Filterable="@false" Sortable="@false" Width="80px" TextAlign="TextAlign.Center">
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Clinic_GridDTO" Filterable="@false" Sortable="@false" Width="80px" TextAlign="TextAlign.Center">
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
    <br />
}

@code 
{
    private RadzenDataGrid<Clinic_GridDTO> grid;
    private Clinic_GridDTO[] clinics;
    private bool isEditing = false;

    protected override async Task OnInitializedAsync()
    {
        clinics = await Http.GetFromJsonAsync<Clinic_GridDTO[]>("api/Clinics");
    }
}
